server:
  port: 9091

spring:
  redis:
    host: 10.16.60.67
    port: 6379
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0
  mail:
    host: smtp.qq.com #邮件服务器地址
    port: 587 #端口号
    username: reset_no_reply@foxmail.com
    password: ahqwqcesgxgedjab
    default-encoding: UTF-8 #默认编码格式
    properties:
      mail:
        debug: false #启动debug调试
        smtp:
          socketFactoryClass: javax.net.ssl.SSLSocketFactory
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory #SSL连接配置
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      url: jdbc:mysql://10.16.60.67:3306/software_eng
      username: root_1
      password: software_eng_pss
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
mybatis:
  table:
    #create系统启动后，会将所有的表删除掉，然后根据model中配置的结构重新建表，该操作会破坏原有数据;
    #update系统会自动判断哪些表是新建的．哪些字段要修改类型等，哪些字段要删除，哪些字段要新增，该操作不会破坏原有数据;
    #add新增表/新增字段/新增索引新增唯一约束的功能，不做做修改和删除(只在版本1.0.9.RELEASE及以上支持);
    #none系统不做任何处理;
    auto: add
  model:
    #扫描用于创建表的对象的包名
    pack: com.*.*.model
  database:
    #数据库类型目前只支持mysql
    type: mysql
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  
minio:
  endpoint: http://10.16.60.67:9000
  accessKey: root
  secretKey: software_eng_pss
  bucketName: softwareeng
  userPath: user-img
  buildingPath: builder-img
  commentPath: comment-img
  uploadImage: upload-img
  restaurantPath: restaurant-img
  foodPath: food-img
  busPath: bus-json
  commodityPath: commodity-img
#  mapper-locations: classpath*/mapper
#    map-underscore-to-camel-case: false
############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
python-backend:
  endpoint: http://localhost:8123/process_image
